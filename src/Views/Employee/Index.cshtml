@model FoundationKit.Domain.Dtos.Paginations.PaginationResult<TalentSchool.Domain.Models.User>

@{
    ViewData["Title"] = "Empleados";
    var currentFilter = Model.Query;
    var currentPage = Model.ActualPage;
    var totalPages = Model.PageTotal;
}

<div class="bg-white p-6 rounded-lg shadow-md">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
        <h1 class="text-2xl font-bold text-gray-800 mb-4 md:mb-0">Listado de Empleados</h1>
        <a href="@Url.Action("Create")" class="px-4 py-2 bg-gray-200 text-gray-700 text-center rounded-md hover:bg-gray-300 transition-colors">
            Nuevo Empleado
        </a>
    </div>

    <!-- Barra de búsqueda -->
    <div class="mb-6">
        <form asp-action="Index" method="get" class="flex flex-col sm:flex-row gap-2">
            <div class="relative flex-grow">
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                </div>
                <input type="text" name="Query" value="@currentFilter" class="pl-10 w-full py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent" placeholder="Buscar empleados...">
            </div>
            <div class="flex gap-2">
                <button type="submit" class="px-4 py-2 bg-gray-200 text-gray-700 text-center rounded-md hover:bg-gray-300 transition-colors">Buscar</button>
                @if (!string.IsNullOrEmpty(currentFilter))
                {
                    <a asp-action="Index" class="px-4 py-2 bg-gray-200 text-gray-700 text-center rounded-md hover:bg-gray-300 transition-colors">Limpiar</a>
                }
            </div>
        </form>
    </div>

    <!-- Tabla de empleados -->
    <div class="overflow-x-auto">
        <table class="min-w-full bg-white border border-gray-200 rounded-lg overflow-hidden">
            <thead class="bg-gray-100">
                <tr>
                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nombre</th>
                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                    <th class="py-3 px-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha</th>
                    <th class="py-3 px-4 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
                @foreach (var item in Model.Results)
                {
                    <tr class="hover:bg-gray-50 transition-colors">
                        <td class="py-3 px-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-10 flex-shrink-0 bg-gray-200 rounded-full flex items-center justify-center">
                                    <span class="text-gray-600 font-medium">@item.FullName[..3]</span>
                                </div>
                                <div class="ml-4">
                                    <div class="text-sm font-medium text-gray-900">@item.FullName</div>
                                </div>
                            </div>
                        </td>
                        <td class="py-3 px-4 whitespace-nowrap text-sm text-gray-700">@item.Email</td>
                        <td class="py-3 px-4 whitespace-nowrap text-sm text-gray-700">01/01/1999</td>
                        <td class="py-3 px-4 whitespace-nowrap text-sm text-center">
                            <div class="flex justify-center space-x-2">
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                    </svg>
                                    Ver
                                </a>
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                    Editar
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.Id })" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                    Eliminar
                                </a>
                            </div>
                        </td>
                    </tr>
                }
                @if (!Model.Results!.Any())
                {
                    <tr>
                        <td colspan="6" class="py-6 px-4 text-center text-gray-500">
                            No se encontraron empleados.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    @if (totalPages > 1)
    {
        <div class="flex items-center justify-between mt-6">
            <div class="text-sm text-gray-700">
                Mostrando página <span class="font-medium">@currentPage</span> de <span class="font-medium">@totalPages</span>
            </div>
            <div class="flex space-x-2">
                @if (currentPage > 1)
                {
                    <a href="@Url.Action("Index", new { searchString = currentFilter, page = currentPage - 1 })" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Anterior
                    </a>
                }
                @if (currentPage < totalPages)
                {
                    <a href="@Url.Action("Index", new { searchString = currentFilter, page = currentPage + 1 })" class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Siguiente
                    </a>
                }
            </div>
        </div>
    }
</div>

<!-- Modal de confirmación para eliminar (opcional) -->
<div id="deleteModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
    <div class="bg-white rounded-lg p-6 max-w-md w-full">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Confirmar eliminación</h3>
        <p class="text-sm text-gray-500 mb-4">¿Estás seguro de que deseas eliminar este empleado? Esta acción no se puede deshacer.</p>
        <div class="flex justify-end space-x-3">
            <button id="cancelDelete" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">Cancelar</button>
            <form id="deleteForm" method="post">
                @Html.AntiForgeryToken()
                <button type="submit" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">Eliminar</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Script para el modal de confirmación de eliminación (opcional)
        document.addEventListener('DOMContentLoaded', function() {
            const deleteLinks = document.querySelectorAll('a[href*="Delete"]');
            const deleteModal = document.getElementById('deleteModal');
            const cancelDelete = document.getElementById('cancelDelete');
            const deleteForm = document.getElementById('deleteForm');

            deleteLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const url = this.getAttribute('href');
                    deleteForm.setAttribute('action', url);
                    deleteModal.classList.remove('hidden');
                });
            });

            cancelDelete.addEventListener('click', function() {
                deleteModal.classList.add('hidden');
            });
        });
    </script>
}

@model PaginationResult<Module>

@using System.Security.Claims
@using Foundationkit.Extensions.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TalentSchool.Domain.Enums

@{
    ViewData["Title"] = "Módulos";
    var currentFilter = Model.Query;
    var currentCategory = "";
    var isAdmin = User.IsInRole(UserType.Admin.GetAttribute());
}

<div class="bg-white p-6 rounded-lg shadow-md">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
        <h1 class="text-2xl font-bold text-gray-800 mb-4 md:mb-0">Módulos de Contenido</h1>

        @if (isAdmin)
        {
            <a href="@Url.Action("Create")"
               class="inline-flex items-center px-4 py-2 bg-primary rounded-md bg-gray-200">
                Crear Módulo
            </a>


            <a href="@Url.Action("Assign", "Progress")"
               class="inline-flex items-center px-4 py-2 bg-primary rounded-md bg-gray-200">
                Asignar Modulo
            </a>
        }
    </div>

    <!-- Filtros -->
    <div class="mb-6">
        <form asp-action="Index" method="get" class="flex flex-col sm:flex-row gap-2">
            <div class="relative flex-grow">
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none"
                         viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                </div>
                <input type="text" name="query" value="@currentFilter"
                       class="pl-10 w-full py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
                       placeholder="Buscar módulos...">
            </div>
            <div class="flex gap-2">
                <button type="submit"
                        class="px-4 py-2 bg-primary bg-gray-200 rounded-md hover:bg-primary-dark transition-colors">
                    Filtrar
                </button>
                @if (!string.IsNullOrEmpty(currentFilter) || !string.IsNullOrEmpty(currentCategory))
                {
                    <a asp-action="Index"
                       class="px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors">Limpiar</a>
                }
            </div>
        </form>
    </div>

    <!-- Listado de módulos -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        @foreach (var module in Model.Results)
        {
            <div class="bg-white border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
                <div class="p-5">
                    <div class="flex items-center justify-between mb-2">
                        <span
                            class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                            @module.Category
                        </span>
                        <span class="text-sm text-gray-500">
                            @(module.Contents?.Count ?? 0) contenidos
                        </span>
                    </div>
                    <h3 class="text-lg font-semibold text-gray-800 mb-2">@module.Title</h3>
                    <p class="text-sm text-gray-600 mb-4">
                        @if (module.Contents?.Any() == true)
                        {
                            @(module.Contents.First().Content.Length > 100
                                ? module.Contents.First().Content.Substring(0, 100) + "..."
                                : module.Contents.First().Content)
                        }
                        else
                        {
                            <span class="text-gray-400">Sin contenido</span>
                        }
                    </p>
                    <div class="flex justify-end space-x-2">

                        @{
                            var action = isAdmin ? "Edit" : "Take";
                            var controller = isAdmin ? "Module" : "Progress";
                        }
                        <a href="@Url.Action(action, controller, new { id = module.Id })"
                           class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24"
                                 stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                            </svg>
                            @{
                                var isCompleted = "tomar";

                                if (User?.Identity?.IsAuthenticated == true && module.Progresses != null && module.Progresses.Any())
                                {
                                    isCompleted = module.Progresses.FirstOrDefault(x => x.UserId == User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value)?
                                        .Status == ProgressStatus.Completed
                                        ? "Completado"
                                        : "Tomar";
                                }
                            }
                            @(isAdmin ? "Ver" : isCompleted)
                        </a>
                        @if (isAdmin)
                        {
                            <a href="@Url.Action("Delete", new { id = module.Id })"
                               class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none"
                                     viewBox="0 0 24 24"
                                     stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                                </svg>
                                Eliminar
                            </a>
                        }
                    </div>
                </div>
            </div>
        }

        @if (!Model.Results.Any())
        {
            <div class="col-span-full py-8 text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 mb-4" fill="none"
                     viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                </svg>
                <h3 class="text-lg font-medium text-gray-900">No se encontraron módulos</h3>
                <p class="mt-1 text-sm text-gray-500">
                    No hay módulos que coincidan con los criterios de búsqueda.
                </p>
                <div class="mt-6">
                    <a href="@Url.Action("Create")"
                       class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
                        Crear un nuevo módulo
                    </a>
                </div>
            </div>
        }
    </div>
</div>

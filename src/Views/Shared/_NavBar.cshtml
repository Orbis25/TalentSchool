@using Foundationkit.Extensions.Enums
@using TalentSchool.Domain.Enums

@{
    var isAdmin = User.IsInRole(UserType.Admin.GetAttribute());
    var isAuth = User?.Identity?.IsAuthenticated ?? false;
}

@if (!isAuth)
{
    return;
}

<nav class="bg-white shadow-md">
    <div class="container mx-auto px-4">
        <div class="flex justify-between items-center h-16">
            <!-- Logo y nombre de la aplicación -->
            <div class="flex items-center">
                @{
                    var index = isAdmin ? Url.Action("Index", "Home") : Url.Action("Index", "Module");
                }
                <a href="@index" class="flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-primary" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z" clip-rule="evenodd"/>
                    </svg>
                    <span class="ml-2 text-xl font-semibold text-gray-800">Escuela de Talentos</span>
                </a>
            </div>

            <!-- Menú de navegación para pantallas medianas y grandes -->
            <div class="hidden md:flex md:items-center md:space-x-4">
              
                @if (isAdmin)
                {
                    <a href="@Url.Action("Index", "Home")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Inicio</a>
                    <a href="@Url.Action("Index", "Employee")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Empleados</a>
                }
                <a href="@Url.Action("Index", "Module")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">@(isAdmin ? "Modulos" : "Clases")</a>
            </div>

            <!-- Botón de autenticación -->
            <div class="hidden md:flex items-center">
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="relative group">
                        <button id="user-menu-button" aria-expanded="false" aria-haspopup="true"  class="flex items-center px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">
                            <span class="mr-2">@User.Identity.Name</span>
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </button>
                        <div id="user-dropdown-menu"  class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-10 hidden">
                                               <div class="border-t border-gray-100"></div>
                            <form asp-controller="Account" asp-action="Logout" method="post">
                                <button type="submit" class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Cerrar Sesión</button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account")" class="px-4 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Iniciar Sesión</a>
                    <a href="@Url.Action("Register", "Account")" class="ml-2 px-4 py-2 bg-primary text-white rounded-md hover:bg-primary-dark transition-colors">Registrarse</a>
                }
            </div>

            <!-- Botón de menú móvil -->
            <div class="md:hidden flex items-center">
                <button id="mobile-menu-button" class="text-gray-700 hover:text-primary focus:outline-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                </button>
            </div>
        </div>

        <!-- Menú móvil -->
        <div id="mobile-menu" class="md:hidden hidden pb-4">
            <div class="flex flex-col space-y-2 mt-2">
                <a href="@Url.Action("Index", "Home")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Inicio</a>
                <a href="@Url.Action("Index", "Employee")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Empleados</a>
                <a href="@Url.Action("Index", "Module")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Modulos</a>
                <div class="border-t border-gray-200 my-2"></div>

                @if (User.Identity.IsAuthenticated)
                {
                       <form asp-controller="Account" asp-action="Logout" method="post">
                        <button type="submit" class="w-full text-left px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Cerrar Sesión</button>
                    </form>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account")" class="px-3 py-2 text-gray-700 hover:text-primary hover:bg-gray-100 rounded-md transition-colors">Iniciar Sesión</a>
                    <a href="@Url.Action("Register", "Account")" class="px-3 py-2 bg-primary text-white rounded-md hover:bg-primary-dark transition-colors">Registrarse</a>
                }
            </div>
        </div>
    </div>
</nav>

<script>
    // JavaScript para el menú móvil y el menú desplegable de usuario
    document.addEventListener('DOMContentLoaded', function() {
        // Menú móvil
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');

        mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
        });

        // Menú desplegable de usuario
        const userMenuButton = document.getElementById('user-menu-button');
        const userDropdownMenu = document.getElementById('user-dropdown-menu');

        if (userMenuButton && userDropdownMenu) {
            // Función para alternar la visibilidad del menú desplegable
            userMenuButton.addEventListener('click', function(e) {
                e.stopPropagation();
                userDropdownMenu.classList.toggle('hidden');

                // Actualizar el atributo aria-expanded para accesibilidad
                const isExpanded = !userDropdownMenu.classList.contains('hidden');
                userMenuButton.setAttribute('aria-expanded', isExpanded);
            });

            // Cerrar el menú cuando se hace clic fuera de él
            document.addEventListener('click', function(e) {
                if (!userMenuButton.contains(e.target) && !userDropdownMenu.contains(e.target)) {
                    userDropdownMenu.classList.add('hidden');
                    userMenuButton.setAttribute('aria-expanded', 'false');
                }
            });

            // Soporte para navegación con teclado
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && !userDropdownMenu.classList.contains('hidden')) {
                    userDropdownMenu.classList.add('hidden');
                    userMenuButton.setAttribute('aria-expanded', 'false');
                    userMenuButton.focus();
                }
            });
        }
    });
</script>
